"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Paginate = void 0;
const common_1 = require("@nestjs/common");
const lodash_1 = require("lodash");
exports.Paginate = (0, common_1.createParamDecorator)((_data, ctx) => {
    const request = ctx.switchToHttp().getRequest();
    const { query } = request;
    // Determine if Express or Fastify to rebuild the original url and reduce down to protocol, host and base url
    let originalUrl;
    if (request.originalUrl) {
        originalUrl = request.protocol + '://' + request.get('host') + request.originalUrl;
    }
    else {
        originalUrl = request.protocol + '://' + request.hostname + request.url;
    }
    const urlParts = new URL(originalUrl);
    const path = urlParts.protocol + '//' + urlParts.host + urlParts.pathname;
    const sortBy = [];
    const searchBy = [];
    if (query.sortBy) {
        const params = !Array.isArray(query.sortBy) ? [query.sortBy] : query.sortBy;
        for (const param of params) {
            if ((0, lodash_1.isString)(param)) {
                const items = param.split(':');
                if (items.length === 2) {
                    sortBy.push(items);
                }
            }
        }
    }
    if (query.searchBy) {
        const params = !Array.isArray(query.searchBy) ? [query.searchBy] : query.searchBy;
        for (const param of params) {
            if ((0, lodash_1.isString)(param)) {
                searchBy.push(param);
            }
        }
    }
    const filter = (0, lodash_1.mapKeys)((0, lodash_1.pickBy)(query, (param, name) => name.includes('filter.') &&
        ((0, lodash_1.isString)(param) || (Array.isArray(param) && param.every((p) => (0, lodash_1.isString)(p))))), (_param, name) => name.replace('filter.', ''));
    return {
        page: query.page ? parseInt(query.page.toString(), 10) : undefined,
        limit: query.limit ? parseInt(query.limit.toString(), 10) : undefined,
        sortBy: sortBy.length ? sortBy : undefined,
        search: query.search ? query.search.toString() : undefined,
        searchBy: searchBy.length ? searchBy : undefined,
        filter: Object.keys(filter).length ? filter : undefined,
        path,
    };
});
//# sourceMappingURL=decorator.js.map